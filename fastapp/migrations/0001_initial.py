# Generated by Django 3.0.5 on 2023-09-12 04:37

import bson.objectid
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.TextField()),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("countrycode", models.TextField(blank=True, null=True)),
                ("phone", models.TextField(blank=True, null=True)),
                ("login_type", models.TextField()),
                ("password", models.TextField()),
                ("is_active", models.BooleanField(default=False)),
                ("socialLoginId", models.TextField(blank=True, null=True)),
                ("profileImage", models.TextField(blank=True, null=True)),
                ("accessToken", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Fastingcycle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("fasting", models.IntegerField(blank=True, null=True)),
                ("nonfasting", models.IntegerField(blank=True, null=True)),
                ("status", models.IntegerField(default=1)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_by", models.CharField(max_length=255)),
                ("updated_by", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "_id",
                    djongo.models.fields.ObjectIdField(
                        auto_created=True,
                        default=bson.objectid.ObjectId,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[("veg", "Veg"), ("non-veg", "Non-Veg")], max_length=10
                    ),
                ),
                ("status", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="MasterDietplan",
            fields=[
                (
                    "_id",
                    djongo.models.fields.ObjectIdField(
                        auto_created=True,
                        default=bson.objectid.ObjectId,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.CharField(max_length=255)),
                ("type", models.CharField(max_length=255)),
                ("status", models.IntegerField(default=1)),
                ("created_by", models.CharField(max_length=255)),
                ("updated_by", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MealCategory",
            fields=[
                (
                    "_id",
                    djongo.models.fields.ObjectIdField(
                        auto_created=True,
                        default=bson.objectid.ObjectId,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("status", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Questionnaire",
            fields=[
                (
                    "_id",
                    djongo.models.fields.ObjectIdField(
                        auto_created=True,
                        default=bson.objectid.ObjectId,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question", models.CharField(max_length=255)),
                ("options", djongo.models.fields.JSONField(blank=True, null=True)),
                (
                    "quetype",
                    models.CharField(
                        choices=[
                            ("MCQ", "mutiple choices"),
                            ("sliding", "sliding"),
                            ("custom", "custom"),
                        ],
                        max_length=255,
                    ),
                ),
                ("range", djongo.models.fields.JSONField(blank=True, null=True)),
                ("inputtype", models.CharField(max_length=255)),
                ("status", models.IntegerField(default=1)),
                ("created_by", models.CharField(max_length=255)),
                ("updated_by", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Recipes",
            fields=[
                (
                    "_id",
                    djongo.models.fields.ObjectIdField(
                        auto_created=True,
                        default=bson.objectid.ObjectId,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("Ingredients", djongo.models.fields.JSONField()),
                ("servings", models.IntegerField()),
                ("prepTime", models.IntegerField()),
                ("cookTime", models.IntegerField()),
                ("instructions", djongo.models.fields.JSONField()),
                ("imageUrls", djongo.models.fields.JSONField()),
                ("Meta_tags", djongo.models.fields.JSONField()),
                ("likes", models.FloatField(default=0)),
                ("nutrition", djongo.models.fields.JSONField()),
                ("status", models.IntegerField(default=1)),
                ("dietaryPreferences", djongo.models.fields.JSONField()),
                ("cuisineType", djongo.models.fields.JSONField(default=list)),
                ("created_by", models.CharField(max_length=255)),
                ("updated_by", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("price", models.FloatField()),
                ("features", models.CharField(max_length=255)),
                ("valid_days", models.IntegerField()),
                (
                    "trailing_allow",
                    models.BooleanField(choices=[(True, "True"), (False, "False")]),
                ),
                ("status", models.IntegerField(default=1)),
                (
                    "payment_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_by", models.CharField(max_length=255)),
                ("updated_by", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="VerifyEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=255)),
                ("expire_time", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DietplanRecipes",
            fields=[
                (
                    "_id",
                    djongo.models.fields.ObjectIdField(
                        auto_created=True,
                        default=bson.objectid.ObjectId,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.IntegerField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "master_dietplan_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fastapp.MasterDietplan",
                    ),
                ),
                (
                    "mealcategory_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fastapp.MealCategory",
                    ),
                ),
                (
                    "recipe_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fastapp.Recipes",
                    ),
                ),
            ],
        ),
    ]
